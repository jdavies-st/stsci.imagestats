[tox]
envlist =
    py{39,310,311,312,dev}-test
    build_docs
    linkcheck
    codestyle
    flynt
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1

allowlist_externals = *

[testenv]
# Pass through the following environment variables which are needed for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI,IS_CRON,ARCH_ON_CI

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    cov: and test coverage

deps =
    numpy122: numpy==1.22.*
    numpy123: numpy==1.23.*

# The following indicates which [project.optional-dependencies] from pyproject.toml will be installed
extras =
    test: test

commands =
    pip freeze
    !cov: pytest --pyargs stsci.imagestats {posargs}
    cov: pytest --pyargs stsci.imagestats --cov stsci.imagestats --cov-config={toxinidir}/pyproject.toml --cov-report xml:{toxinidir}/coverage.xml {posargs}

pip_pre =
    predeps: true
    !predeps: false


# This lets developers use tox to build docs and ignores warnings.
# This is not used in CI; For that, we have RTD PR builder.
[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b html . _build/html {posargs:-j auto}

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -b linkcheck . _build/html {posargs:-W}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}

[testenv:flynt]
skip_install = true
description = Run flynt to convert old string formatting to f-strings
deps =
    flynt
commands =
    flynt -f {toxinidir}

[testenv:pyinstaller]
# Check that astropy can be included in a PyInstaller bundle without any issues. This
# also serves as a test that tests do not import anything from outside the tests
# directories with relative imports, since we copy the tests out to a separate directory
# to run them.
description = check that astropy can be included in a pyinstaller bundle
changedir = .pyinstaller
deps =
    pyinstaller
    pytest-mpl
    matplotlib
extras = test
commands =
    pyinstaller --onefile run_astropy_tests.py \
                --distpath . \
                --additional-hooks-dir hooks \
                --exclude-module tkinter \
                --collect-submodules=py \
                --hidden-import pytest \
                --hidden-import pytest_astropy.plugin \
                --hidden-import pytest_remotedata.plugin \
                --hidden-import pytest_doctestplus.plugin \
                --hidden-import pytest_mpl.plugin
    ./run_astropy_tests --astropy-root {toxinidir}